fn reassign_list_cause_cordy_bad(value_index, new_value, input_list) -> 
    input_list[:value_index] + [new_value] + input_list[(value_index+1):]



fn michael_bublee_merry_christmas_snort(input_list) {
    let j = 0
    loop {
        if j == input_list . len {
            break
        }

        let i = 0
        loop {
            [i, j, input_list . len] . print
            if i == (input_list . len) - 1 {
                break
            }
            
            let min_element = [input_list[i], input_list[i+1]] . min
            let max_element = [input_list[i], input_list[i+1]] . max
        
            input_list = input_list
                .reassign_list_cause_cordy_bad(i, min_element)
                .reassign_list_cause_cordy_bad(i+1, max_element)
	    if i > 10 { return }
            i += 1
        }
    j += 1
    }
    // return input_list 
    // but someone is anal
    input_list
}


michael_bublee_merry_christmas_snort([4, 2, 19, 0, -1, '7']) . print
